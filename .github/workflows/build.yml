name: Build and Release Mimic

on:
push:
tags:
- “v*.*.*”   # 例如 v1.0.0
workflow_dispatch:

jobs:
build:
runs-on: ubuntu-latest

```
strategy:
  matrix:
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]

steps:
  - name: Checkout code
    uses: actions/checkout@v4

  - name: Set up Go
    uses: actions/setup-go@v5
    with:
      go-version: "1.23"

  - name: Create build directory
    run: mkdir -p build

  - name: Build server
    run: |
      if [ "${{ matrix.goos }}" == "windows" ]; then
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/mimic-server-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./server
      else
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/mimic-server-${{ matrix.goos }}-${{ matrix.goarch }} ./server
      fi

  - name: Build client
    run: |
      if [ "${{ matrix.goos }}" == "windows" ]; then
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/mimic-client-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./client
      else
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/mimic-client-${{ matrix.goos }}-${{ matrix.goarch }} ./client
      fi

  - name: Make binaries executable (Unix systems)
    if: matrix.goos != 'windows'
    run: |
      chmod +x build/mimic-server-${{ matrix.goos }}-${{ matrix.goarch }}
      chmod +x build/mimic-client-${{ matrix.goos }}-${{ matrix.goarch }}

  - name: Upload artifacts
    uses: actions/upload-artifact@v4
    with:
      name: mimic-${{ matrix.goos }}-${{ matrix.goarch }}
      path: build/
```

release:
needs: build
runs-on: ubuntu-latest
if: startsWith(github.ref, ‘refs/tags/’)

```
steps:
  - name: Checkout code
    uses: actions/checkout@v4

  - name: Download all artifacts
    uses: actions/download-artifact@v4
    with:
      path: ./artifacts

  - name: Prepare release files
    run: |
      mkdir -p release
      # 将所有平台的二进制文件收集到 release 目录
      find ./artifacts -name "mimic-*" -type f -exec cp {} ./release/ \;
      ls -la ./release/

  - name: Create Release
    uses: softprops/action-gh-release@v2
    with:
      files: release/*
      tag_name: ${{ github.ref_name }}
      name: Release ${{ github.ref_name }}
      body: |
        ## Changes in this release
        
        - Add your release notes here
        
        ## Download
        
        Choose the appropriate binary for your platform:
        - **Linux AMD64**: mimic-server-linux-amd64, mimic-client-linux-amd64
        - **Linux ARM64**: mimic-server-linux-arm64, mimic-client-linux-arm64
        - **macOS AMD64**: mimic-server-darwin-amd64, mimic-client-darwin-amd64
        - **macOS ARM64** (Apple Silicon): mimic-server-darwin-arm64, mimic-client-darwin-arm64
        - **Windows AMD64**: mimic-server-windows-amd64.exe, mimic-client-windows-amd64.exe
        - **Windows ARM64**: mimic-server-windows-arm64.exe, mimic-client-windows-arm64.exe
      draft: false
      prerelease: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```
